function interopDefault(e){return e&&"object"==typeof e&&"default"in e?e.default:e}function createCommonjsModule(e,n){return n={exports:{}},e(n,n.exports),n.exports}function insertStyle(){var e=document.head,n=e.children[0];e.insertBefore($uiStyle[0],n||null)}function applyStyle(n){document.contains($uiStyle[0])||insertStyle();var i=e.element(document.createTextNode(n));$uiStyle.append(i)}import e from"angular";var name="ng-viva-ui",utils=createCommonjsModule(function(e){"use strict";e.exports={camelize:function(e,n){var i=e.split("-");return n="undefined"==typeof n?{}:n,i[0]=i[0].charAt(0)[n.capitalize?"toUpperCase":"toLowerCase"]()+i[0].slice(1),i[0]+i.slice(1).map(function(e){return e.charAt(0).toUpperCase()+e.slice(1)}).join("")}}});interopDefault(utils);var camelize=utils.camelize,moduleName=camelize(name),mainModule=function(){try{return e.module(moduleName)}catch(n){return e.module(moduleName,[])}}(),$uiStyle=e.element('<style type="text/css">'),style="viva-ui-card {\n  -o-transition: all 250ms ease-in-out;\n  -moz-transition: all 250ms ease-in-out;\n  -webkit-transition: all 250ms ease-in-out;\n  transition: all 250ms ease-in-out;\n  background-color: white;\n  border-radius: 2px;\n  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.12); }\n  viva-ui-card, viva-ui-card viva-ui-card-content, viva-ui-card viva-ui-card-footer {\n    display: block; }\n  viva-ui-card viva-ui-card-content, viva-ui-card viva-ui-card-footer {\n    padding: 8px 16px; }\n  viva-ui-card viva-ui-card-footer {\n    border-top: 1px solid rgba(0, 0, 0, 0.12); }\n";mainModule.directive("vivaUiCard",function(){return applyStyle(style),{restrict:"E"}});var template="<div ng-class=\"{'{{$uiCheckbox.classPrefix + '__container'}}': true, '{{$uiCheckbox.classPrefix + '__container--has-minus'}}': $uiCheckbox.hasMinusIcon}\">\n  <viva-ui-icon icon=\"check\" ng-class=\"[$uiCheckbox.classPrefix + '__check']\" ng-hide=\"$uiCheckbox.hasMinusIcon\"></viva-ui-icon>\n  <i ng-class=\"[$uiCheckbox.classPrefix + '__minus']\" ng-show=\"$uiCheckbox.hasMinusIcon\"></i>\n</div>",style$1='input[type="checkbox"][viva-ui-checkbox] {\n  display: none; }\n  input[type="checkbox"][viva-ui-checkbox] + .viva-ui-checkbox__container {\n    -o-transition: all 250ms ease-in-out;\n    -moz-transition: all 250ms ease-in-out;\n    -webkit-transition: all 250ms ease-in-out;\n    transition: all 250ms ease-in-out;\n    background-color: #ffffff;\n    box-sizing: border-box;\n    display: inline-block;\n    color: #ffffff;\n    border: 1px solid rgba(0, 0, 0, 0.38);\n    border-radius: 2px;\n    width: 16px;\n    height: 16px;\n    position: relative; }\n    input[type="checkbox"][viva-ui-checkbox] + .viva-ui-checkbox__container .viva-ui-checkbox__check {\n      -ms-user-select: none;\n      -moz-user-select: none;\n      -webkit-user-select: none;\n      user-select: none;\n      box-sizing: border-box;\n      line-height: 0;\n      opacity: 0;\n      padding: 0px 1px;\n      width: 100%;\n      height: 100%; }\n    input[type="checkbox"][viva-ui-checkbox] + .viva-ui-checkbox__container .viva-ui-checkbox__minus {\n      opacity: 0;\n      background-color: rgba(0, 0, 0, 0.38);\n      display: inline-block;\n      position: absolute;\n      height: 2px;\n      top: calc(50% - 1px);\n      left: 2px;\n      right: 2px; }\n  input[type="checkbox"][viva-ui-checkbox]:checked + .viva-ui-checkbox__container {\n    background-color: #00acff;\n    border-color: #00acff; }\n    input[type="checkbox"][viva-ui-checkbox]:checked + .viva-ui-checkbox__container.viva-ui-checkbox__container--has-minus {\n      background-color: #ffffff;\n      border-color: rgba(0, 0, 0, 0.38); }\n    input[type="checkbox"][viva-ui-checkbox]:checked + .viva-ui-checkbox__container .viva-ui-checkbox__check, input[type="checkbox"][viva-ui-checkbox]:checked + .viva-ui-checkbox__container .viva-ui-checkbox__minus {\n      opacity: 1; }\n  input[type="checkbox"][viva-ui-checkbox] + .viva-ui-checkbox__container:hover,\n  input[type="checkbox"][viva-ui-checkbox]:checked + .viva-ui-checkbox__container.viva-ui-checkbox__container--has-minus:hover {\n    border-color: #00acff; }\n  input[type="checkbox"][viva-ui-checkbox]:disabled + .viva-ui-checkbox__container, input[type="checkbox"][viva-ui-checkbox]:disabled:checked + .viva-ui-checkbox__container {\n    color: rgba(0, 0, 0, 0.38);\n    background-color: #eeeeee;\n    border-color: rgba(0, 0, 0, 0.12); }\n',arrow='<svg width="8px" height="12px" viewBox="0 0 8 12" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">\n  <g stroke="none" stroke-width="1" fill="currentcolor" fill-rule="evenodd">\n    <g transform="translate(-75.000000, -228.000000)">\n      <g transform="translate(64.000000, 216.000000)">\n        <g transform="translate(4.000000, 6.000000)">\n          <polyline transform="translate(11.333333, 12.000000) scale(1, -1) rotate(-90.000000) translate(-11.333333, -12.000000) " points="6.73333333 15.6666667 11.3333333 11.108 15.9333333 15.6666667 17.3333333 14.2793333 11.3333333 8.33333333 5.33333333 14.2793333 6.73333333 15.6666667"></polyline>\n        </g>\n      </g>\n    </g>\n  </g>\n</svg>',check='<svg width="12px" height="10px" viewBox="0 0 12 10" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">\n  <g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">\n    <g transform="translate(-367.000000, -295.000000)" fill="currentcolor">\n      <g transform="translate(365.000000, 292.000000)">\n        <g transform="translate(0.000000, 0.000000)">\n          <polygon id="Rectangle-34-Copy" points="6 13 2 8.83333333 3.6 7.16666667 6 9.66666667 12.4 3 14 4.66666667"></polygon>\n        </g>\n      </g>\n    </g>\n  </g>\n</svg>',uiIconset=Object.freeze({arrow:arrow,check:check}),style$2="viva-ui-icon {\n  display: inline-block; }\n  viva-ui-icon > svg {\n    width: 100%;\n    height: 100%; }\n";mainModule.directive("vivaUiIcon",function(){return applyStyle(style$2),{restrict:"E",link:function(e,n,i){i.$observe("icon",function(e){var i=uiIconset[e];return i?void n.html(i):void n.empty()})}}});var classCallCheck=function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")},createClass=function(){function e(e,n){for(var i=0;i<n.length;i++){var t=n[i];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(e,t.key,t)}}return function(n,i,t){return i&&e(n.prototype,i),t&&e(n,t),n}}(),CheckboxHandler=function(){function e(n,i,t,o,r){classCallCheck(this,e),this.$scope=n,this.$element=i,this.$attrs=t,this.$ngModel=o,this.$uiCheckbox=r}return createClass(e,[{key:"onClick",value:function(){var e=this.$element[0],n=e.disabled;if(!n){var i=e.checked,t=!this.$attrs.hasOwnProperty("ngTrueValue")||this.$scope.$eval(this.$attrs.ngTrueValue),o=!!this.$attrs.hasOwnProperty("ngFalseValue")&&this.$scope.$eval(this.$attrs.ngFalseValue),r=i?o:t;this.$ngModel.$setViewValue(r),this.$ngModel.$render()}}}]),e}();mainModule.directive("vivaUiCheckbox",["$compile",function(e){return applyStyle(style$1),{restrict:"A",require:"ngModel",link:function(n,i,t,o){var r=n.$new(!0),a=r.$uiCheckbox={};a.classPrefix="viva-ui-checkbox";var c=e(template)(r),l=new CheckboxHandler(n,i,t,o,a);i.after(c),t.$observe("vivaUiCheckbox",function(e){a.hasMinusIcon="minus"===e}),c.bind("click",function(e){l.onClick();var i=t.ngClick;i&&(n.$event=e,n.$eval(i),delete n.$event)})}}}]);var style$3="viva-ui-completometro {\n  display: inline-block;\n  min-width: 64px; }\n  viva-ui-completometro .viva-ui-completometro__arch {\n    height: 32px;\n    overflow: hidden;\n    position: relative; }\n  viva-ui-completometro .viva-ui-completometro__arch-border,\n  viva-ui-completometro .viva-ui-completometro__arch-body {\n    border-radius: 50%; }\n  viva-ui-completometro .viva-ui-completometro__arch-border,\n  viva-ui-completometro .viva-ui-completometro__arch-border-bg,\n  viva-ui-completometro .viva-ui-completometro__arch-progress {\n    position: absolute; }\n  viva-ui-completometro .viva-ui-completometro__arch-border {\n    overflow: hidden;\n    width: 64px;\n    height: 64px; }\n  viva-ui-completometro .viva-ui-completometro__arch-border-bg {\n    background-color: red;\n    width: 100%;\n    height: 100%; }\n  viva-ui-completometro .viva-ui-completometro__arch-progress {\n    background-color: green;\n    width: 0;\n    height: 100%;\n    -o-transition: all 250ms ease-in-out;\n    -moz-transition: all 250ms ease-in-out;\n    -webkit-transition: all 250ms ease-in-out;\n    transition: all 250ms ease-in-out;\n    -o-transform: rotate(-90deg);\n    -ms-transform: rotate(-90deg);\n    -moz-transform: rotate(-90deg);\n    -webkit-transform: rotate(-90deg);\n    transform: rotate(-90deg); }\n  viva-ui-completometro .viva-ui-completometro__arch-body {\n    background-color: blue;\n    position: relative;\n    top: 3px;\n    left: 3px;\n    width: 58px;\n    height: 58px; }\n",template$1="<div ng-class=\"[$uiCompletometro.classPrefix + '__arch']\">\n  <div ng-class=\"[$uiCompletometro.classPrefix + '__arch-border']\">\n    <div ng-class=\"[$uiCompletometro.classPrefix + '__arch-border-bg']\"></div>\n    <div ng-class=\"[$uiCompletometro.classPrefix + '__arch-progress']\"></div>\n  </div>\n  <div ng-class=\"[$uiCompletometro.classPrefix + '__arch-body']\"></div>\n</div>\n<span>Completo</span>",CompletometroHandler=function(){function e(n,i){classCallCheck(this,e),this.$element=n,this.$ctrl=i}return createClass(e,[{key:"setProgress",value:function(e){this.$element.css("width",e+"px")}}]),e}();mainModule.directive("vivaUiCompletometro",function(){return applyStyle(style$3),{template:template$1,restrict:"E",scope:{progress:"="},bindToController:!0,controllerAs:"$uiCompletometro",controller:function(){this.classPrefix="viva-ui-completometro"},link:function(e,n,i,t){var o=new CompletometroHandler(n,t);e.$watch(function(){return t.progress},function(e){e="number"!=typeof e||Number.isNaN(e)?0:e,o.setProgress(e)})}}});var style$4="[viva-ui-flat-button] {\n  border: none;\n  background-color: transparent;\n  border-radius: 2px;\n  color: #00acff;\n  font-size: 16px;\n  font-family: 'Open Sans', sans-serif;\n  font-weight: 600;\n  padding: 0 16px;\n  text-align: center;\n  min-height: 48px;\n  min-width: 16px;\n  outline: none;\n  font-family: 'Open Sans', sans-serif;\n  -o-transition: all 150ms ease-in-out;\n  -moz-transition: all 150ms ease-in-out;\n  -webkit-transition: all 150ms ease-in-out;\n  transition: all 150ms ease-in-out; }\n  [viva-ui-flat-button]:hover {\n    cursor: pointer; }\n  [viva-ui-flat-button]:active {\n    background-color: rgba(0, 172, 255, 0.1); }\n  [viva-ui-flat-button]:disabled {\n    color: rgba(0, 0, 0, 0.38); }\n\n[viva-ui-flat-button=\"small\"] {\n  font-size: 13px;\n  min-height: 36px;\n  text-transform: uppercase; }\n\n[viva-ui-flat-button=\"large\"] {\n  min-height: 56px; }\n";mainModule.directive("vivaUiFlatButton",function(){return applyStyle(style$4),{restrict:"A"}});var style$5='input[type="text"][viva-ui-input] {\n  border: 1px solid rgba(0, 0, 0, 0.12);\n  border-radius: 2px;\n  box-sizing: border-box;\n  color: rgba(0, 0, 0, 0.87);\n  font-size: 16px;\n  line-height: 44px;\n  margin: 0;\n  outline: none;\n  min-height: 44px;\n  font-family: \'Open Sans\', sans-serif;\n  padding-left: 16px;\n  padding-right: 16px;\n  -o-transition: border-color 250ms ease-in;\n  -moz-transition: border-color 250ms ease-in;\n  -webkit-transition: border-color 250ms ease-in;\n  transition: border-color 250ms ease-in; }\n  input[type="text"][viva-ui-input]:-ms-input-placeholder {\n    color: rgba(0, 0, 0, 0.38); }\n  input[type="text"][viva-ui-input]::-moz-placeholder {\n    color: rgba(0, 0, 0, 0.38); }\n  input[type="text"][viva-ui-input]::-webkit-input-placeholder {\n    color: rgba(0, 0, 0, 0.38); }\n  input[type="text"][viva-ui-input]:focus {\n    border-width: 2px;\n    border-color: #00acff;\n    padding-left: 15px;\n    padding-right: 15px; }\n\ninput[type="text"][viva-ui-input="error"], input[type="text"][viva-ui-input="error"]:focus {\n  border-width: 1px;\n  border-color: #e64a45;\n  padding-left: 16px;\n  padding-right: 16px; }\n\ninput[type="text"][viva-ui-input="error"] + [viva-ui-input-status] {\n  color: #e64a45;\n  font-size: 12px;\n  line-height: 18px; }\n';mainModule.directive("vivaUiInput",function(){return applyStyle(style$5),{restrict:"A"}});var style$6="viva-ui-status-tag {\n  display: inline-block;\n  border: 1px solid;\n  border-radius: 2px;\n  font-size: 13px;\n  padding: 0 8px;\n  line-height: 24px;\n  font-family: 'Open Sans', sans-serif;\n  -o-transition: all 250ms ease-in-out;\n  -moz-transition: all 250ms ease-in-out;\n  -webkit-transition: all 250ms ease-in-out;\n  transition: all 250ms ease-in-out;\n  border-color: rgba(0, 0, 0, 0.12);\n  color: rgba(0, 0, 0, 0.5); }\n  viva-ui-status-tag[status=\"success\"] {\n    border-color: #39d91e;\n    color: #39d91e; }\n";mainModule.directive("vivaUiStatusTag",function(){return applyStyle(style$6),{restrict:"E"}});export default mainModule;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,