!function(n,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e(require("angular")):"function"==typeof define&&define.amd?define(["angular"],e):n.ngVivaUi=e(n.angular)}(this,function(n){"use strict";function e(n){return n&&"object"==typeof n&&"default"in n?n.default:n}function i(n,e){return e={exports:{}},n(e,e.exports),e.exports}function o(){var n=document.head,e=n.children[0];n.insertBefore(u[0],e||null)}function t(e){var i=n.element(document.createTextNode(e));u.append(i)}n="default"in n?n.default:n;var r="ng-viva-ui",a=i(function(n){n.exports={hifen2CamelCase:function(n,e){var i=n.split("-");return i[0]=i[0].charAt(0)[e?"toUpperCase":"toLowerCase"]()+i[0].slice(1),i[0]+i.slice(1).map(function(n){return n.charAt(0).toUpperCase()+n.slice(1)}).join("")}}});e(a);var c=a.hifen2CamelCase,s=c(r),l=function(){try{return n.module(s)}catch(e){return n.module(s,[])}}(),u=n.element('<style type="text/css">');l.run(o);var v="<div ng-class=\"{'{{$uiCheckbox.classPrefix + '__container'}}': true, '{{$uiCheckbox.classPrefix + '__container--has-minus'}}': $uiCheckbox.hasMinusIcon}\">\n  <viva-ui-icon icon=\"check\" ng-class=\"[$uiCheckbox.classPrefix + '__check']\" ng-hide=\"$uiCheckbox.hasMinusIcon\"></viva-ui-icon>\n  <i ng-class=\"[$uiCheckbox.classPrefix + '__minus']\" ng-show=\"$uiCheckbox.hasMinusIcon\"></i>\n</div>",h="[viva-ui-checkbox] {\n  display: none; }\n\n.viva-ui-checkbox__container {\n  -o-transition: all 250ms ease-in-out;\n  -moz-transition: all 250ms ease-in-out;\n  -webkit-transition: all 250ms ease-in-out;\n  transition: all 250ms ease-in-out;\n  background-color: #ffffff;\n  box-sizing: border-box;\n  display: inline-block;\n  color: #ffffff;\n  border: 1px solid rgba(0, 0, 0, 0.38);\n  border-radius: 2px;\n  width: 16px;\n  height: 16px;\n  position: relative; }\n\n.viva-ui-checkbox__container:hover,\n[viva-ui-checkbox]:checked + .viva-ui-checkbox__container.viva-ui-checkbox__container--has-minus:hover {\n  border-color: #00acff; }\n\n.viva-ui-checkbox__check {\n  -ms-user-select: none;\n  -moz-user-select: none;\n  -webkit-user-select: none;\n  user-select: none;\n  box-sizing: border-box;\n  line-height: 0;\n  opacity: 0;\n  padding: 0px 1px;\n  width: 100%;\n  height: 100%; }\n\n.viva-ui-checkbox__minus {\n  opacity: 0;\n  background-color: rgba(0, 0, 0, 0.38);\n  display: inline-block;\n  position: absolute;\n  height: 2px;\n  top: calc(50% - 1px);\n  left: 2px;\n  right: 2px; }\n\n[viva-ui-checkbox]:checked + .viva-ui-checkbox__container {\n  background-color: #00acff;\n  border-color: #00acff; }\n  [viva-ui-checkbox]:checked + .viva-ui-checkbox__container.viva-ui-checkbox__container--has-minus {\n    background-color: #ffffff;\n    border-color: rgba(0, 0, 0, 0.38); }\n  [viva-ui-checkbox]:checked + .viva-ui-checkbox__container .viva-ui-checkbox__check, [viva-ui-checkbox]:checked + .viva-ui-checkbox__container .viva-ui-checkbox__minus {\n    opacity: 1; }\n\n[viva-ui-checkbox]:disabled + .viva-ui-checkbox__container,\n[viva-ui-checkbox]:disabled:checked + .viva-ui-checkbox__container {\n  color: rgba(0, 0, 0, 0.38);\n  background-color: #eeeeee;\n  border-color: rgba(0, 0, 0, 0.12); }\n",f='<svg width="8px" height="12px" viewBox="0 0 8 12" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">\n  <g stroke="none" stroke-width="1" fill="currentcolor" fill-rule="evenodd">\n    <g transform="translate(-75.000000, -228.000000)">\n      <g transform="translate(64.000000, 216.000000)">\n        <g transform="translate(4.000000, 6.000000)">\n          <polyline transform="translate(11.333333, 12.000000) scale(1, -1) rotate(-90.000000) translate(-11.333333, -12.000000) " points="6.73333333 15.6666667 11.3333333 11.108 15.9333333 15.6666667 17.3333333 14.2793333 11.3333333 8.33333333 5.33333333 14.2793333 6.73333333 15.6666667"></polyline>\n        </g>\n      </g>\n    </g>\n  </g>\n</svg>',b='<svg width="12px" height="10px" viewBox="0 0 12 10" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">\n  <g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">\n    <g transform="translate(-367.000000, -295.000000)" fill="currentcolor">\n      <g transform="translate(365.000000, 292.000000)">\n        <g transform="translate(0.000000, 0.000000)">\n          <polygon id="Rectangle-34-Copy" points="6 13 2 8.83333333 3.6 7.16666667 6 9.66666667 12.4 3 14 4.66666667"></polygon>\n        </g>\n      </g>\n    </g>\n  </g>\n</svg>',d=Object.freeze({arrow:f,check:b}),x="viva-ui-icon {\n  display: inline-block; }\n  viva-ui-icon > svg {\n    width: 100%;\n    height: 100%; }\n";l.directive("vivaUiIcon",function(){return t(x),{restrict:"E",link:function(n,e,i){i.$observe("icon",function(n){var i=d[n];return i?void e.html(i):void e.empty()})}}});var g=function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")},p=function(){function n(n,e){for(var i=0;i<e.length;i++){var o=e[i];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(n,o.key,o)}}return function(e,i,o){return i&&n(e.prototype,i),o&&n(e,o),e}}(),k=function(){function n(e,i,o,t,r){g(this,n),this.$scope=e,this.$element=i,this.$attrs=o,this.$ngModel=t,this.$uiCheckbox=r}return p(n,[{key:"onClick",value:function(){var n=this.$element[0],e=n.disabled;if(!e){var i=n.checked,o=!this.$attrs.hasOwnProperty("ngTrueValue")||this.$scope.$eval(this.$attrs.ngTrueValue),t=!!this.$attrs.hasOwnProperty("ngFalseValue")&&this.$scope.$eval(this.$attrs.ngFalseValue),r=i?t:o;this.$ngModel.$setViewValue(r),this.$ngModel.$render()}}}]),n}();l.directive("vivaUiCheckbox",["$compile",function(n){return t(h),{restrict:"A",require:"ngModel",link:function(e,i,o,t){var r=e.$new(!0),a=r.$uiCheckbox={};a.classPrefix="viva-ui-checkbox";var c=n(v)(r),s=new k(e,i,o,t,a);i.after(c),o.$observe("vivaUiCheckbox",function(n){a.hasMinusIcon="minus"===n}),c.bind("click",function(){s.onClick();var n=o.ngClick;if(n){var e=new window.MouseEvent("click",{bubbles:!0,cancelable:!0});i[0].dispatchEvent(e)}})}}}]);var m='[viva-ui-flat-button] {\n  -o-transition: all 250ms ease-in-out;\n  -moz-transition: all 250ms ease-in-out;\n  -webkit-transition: all 250ms ease-in-out;\n  transition: all 250ms ease-in-out;\n  border: none;\n  background-color: transparent;\n  border-radius: 2px;\n  color: #00acff;\n  font-size: 16px;\n  font-family: \'Open Sans\', sans-serif;\n  font-weight: 600;\n  padding: 0 16px;\n  text-align: center;\n  min-height: 48px;\n  min-width: 16px;\n  outline: none; }\n  [viva-ui-flat-button]:hover {\n    cursor: pointer; }\n  [viva-ui-flat-button]:active {\n    background-color: rgba(0, 172, 255, 0.1); }\n  [viva-ui-flat-button]:disabled {\n    color: rgba(0, 0, 0, 0.38); }\n\n[viva-ui-flat-button="small"] {\n  font-size: 13px;\n  min-height: 36px;\n  text-transform: uppercase; }\n\n[viva-ui-flat-button="large"] {\n  min-height: 56px; }\n';return l.directive("vivaUiFlatButton",function(){return t(m),{restrict:"A"}}),l});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,