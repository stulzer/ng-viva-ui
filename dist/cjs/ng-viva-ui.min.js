"use strict";function _interopDefault(e){return e&&"object"==typeof e&&"default"in e?e.default:e}function insertStyle(){var e=document.head,n=e.children[0];e.insertBefore($uiStyle[0],n||null)}function applyStyle(e){var n=angular.element(document.createTextNode(e));$uiStyle.append(n)}var angular=_interopDefault(require("angular")),name="ng-viva-ui",uiModule=angular.module(name,[]),$uiStyle=angular.element('<style type="text/css">');uiModule.run(insertStyle);var template="<div ng-class=\"{'{{$uiCheckbox.classPrefix + '__container'}}': true, '{{$uiCheckbox.classPrefix + '__container--has-minus'}}': $uiCheckbox.hasMinusIcon}\">\n  <viva-ui-icon icon=\"check\" ng-class=\"[$uiCheckbox.classPrefix + '__check']\" ng-hide=\"$uiCheckbox.hasMinusIcon\"></viva-ui-icon>\n  <i ng-class=\"[$uiCheckbox.classPrefix + '__minus']\" ng-show=\"$uiCheckbox.hasMinusIcon\"></i>\n</div>",style="[viva-ui-checkbox] {\n  display: none; }\n\n.viva-ui-checkbox__container {\n  background-color: #ffffff;\n  box-sizing: border-box;\n  display: inline-block;\n  color: #ffffff;\n  border: 1px solid rgba(0, 0, 0, 0.38);\n  border-radius: 2px;\n  width: 16px;\n  height: 16px;\n  -webkit-transition: all 250ms ease-in-out;\n  transition: all 250ms ease-in-out;\n  position: relative; }\n\n.viva-ui-checkbox__check {\n  opacity: 0;\n  -webkit-transform: translate(10%, -10%);\n  transform: translate(10%, -10%); }\n\n.viva-ui-checkbox__minus {\n  opacity: 0;\n  background-color: rgba(0, 0, 0, 0.38);\n  display: inline-block;\n  position: absolute;\n  width: 10px;\n  height: 2px;\n  top: calc(50% - 1px);\n  left: calc(50% - 5px); }\n\n[viva-ui-checkbox]:checked + .viva-ui-checkbox__container {\n  background-color: #00acff;\n  border-color: #00acff; }\n  [viva-ui-checkbox]:checked + .viva-ui-checkbox__container.viva-ui-checkbox__container--has-minus {\n    background-color: #ffffff;\n    border-color: rgba(0, 0, 0, 0.38); }\n  [viva-ui-checkbox]:checked + .viva-ui-checkbox__container .viva-ui-checkbox__check, [viva-ui-checkbox]:checked + .viva-ui-checkbox__container .viva-ui-checkbox__minus {\n    opacity: 1; }\n\n[viva-ui-checkbox]:disabled + .viva-ui-checkbox__container,\n[viva-ui-checkbox]:disabled:checked + .viva-ui-checkbox__container {\n  color: rgba(0, 0, 0, 0.38);\n  background-color: #eeeeee;\n  border-color: rgba(0, 0, 0, 0.12); }\n",check='<svg width="12px" height="10px" viewBox="0 0 12 10" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">\n  <g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">\n    <g transform="translate(-367.000000, -295.000000)" fill="currentcolor">\n      <g transform="translate(365.000000, 292.000000)">\n        <g transform="translate(0.000000, 0.000000)">\n          <polygon id="Rectangle-34-Copy" points="6 13 2 8.83333333 3.6 7.16666667 6 9.66666667 12.4 3 14 4.66666667"></polygon>\n        </g>\n      </g>\n    </g>\n  </g>\n</svg>',uiIconset=Object.freeze({check:check}),style$1="viva-ui-icon {\n  display: inline-block; }\n";uiModule.directive("vivaUiIcon",function(){return applyStyle(style$1),{restrict:"E",link:function(e,n,i){i.$observe("icon",function(e){var i=uiIconset[e];return i?void n.html(i):void n.empty()})}}});var classCallCheck=function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")},createClass=function(){function e(e,n){for(var i=0;i<n.length;i++){var c=n[i];c.enumerable=c.enumerable||!1,c.configurable=!0,"value"in c&&(c.writable=!0),Object.defineProperty(e,c.key,c)}}return function(n,i,c){return i&&e(n.prototype,i),c&&e(n,c),n}}(),CheckboxHandler=function(){function e(n,i){classCallCheck(this,e),this.$element=n,this.$uiCheckbox=i}return createClass(e,[{key:"setIcon",value:function(){var e=this.$element[0],n=e.disabled,i=e.checked,c="checkbox";c+=i?"On":"Off",n&&(c+="Disabled"),this.$uiCheckbox.icon=c}}]),e}();uiModule.directive("vivaUiCheckbox",["$compile",function(e){return applyStyle(style),{restrict:"A",require:"ngModel",link:function(n,i,c,o){var a=n.$new(!0),t=a.$uiCheckbox={};t.classPrefix="viva-ui-checkbox";var r=e(template)(a),l=new CheckboxHandler(i,t);i.after(r),c.$observe("vivaUICheckbox",function(e){t.hasMinusIcon="minus"===e}),n.$watch(function(){var e=i[0],n=e.disabled,c=e.checked;return{disabled:n,checked:c}},function(e){l.setIcon()},!0),r.bind("click",function(){var e=i[0],a=e.disabled;if(!a){var t=e.checked,r=!c.hasOwnProperty("ngTrueValue")||n.$eval(c.ngTrueValue),u=!!c.hasOwnProperty("ngFalseValue")&&n.$eval(c.ngFalseValue);o.$setViewValue(t?u:r),o.$render(),n.$applyAsync(function(){l.setIcon()})}})}}}]),module.exports=uiModule;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,