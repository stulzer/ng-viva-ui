var ngVivaUi=function(n){"use strict";function i(n){return n&&"object"==typeof n&&"default"in n?n.default:n}function e(n,i){return i={exports:{}},n(i,i.exports),i.exports}function t(){var n=document.head,i=n.children[0];n.insertBefore(l[0],i||null)}function o(i){document.contains(l[0])||t();var e=n.element(document.createTextNode(i));l.append(e)}n="default"in n?n.default:n;var a="ng-viva-ui",r=e(function(n){n.exports={hifen2CamelCase:function(n,i){var e=n.split("-");return e[0]=e[0].charAt(0)[i?"toUpperCase":"toLowerCase"]()+e[0].slice(1),e[0]+e.slice(1).map(function(n){return n.charAt(0).toUpperCase()+n.slice(1)}).join("")}}});i(r);var c=r.hifen2CamelCase,s=c(a),u=function(){try{return n.module(s)}catch(i){return n.module(s,[])}}(),l=n.element('<style type="text/css">'),v="viva-ui-card {\n  -o-transition: all 250ms ease-in-out;\n  -moz-transition: all 250ms ease-in-out;\n  -webkit-transition: all 250ms ease-in-out;\n  transition: all 250ms ease-in-out;\n  background-color: white;\n  border-radius: 2px;\n  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.12); }\n  viva-ui-card, viva-ui-card viva-ui-card-content, viva-ui-card viva-ui-card-footer {\n    display: block; }\n  viva-ui-card viva-ui-card-content, viva-ui-card viva-ui-card-footer {\n    padding: 8px 16px; }\n  viva-ui-card viva-ui-card-footer {\n    border-top: 1px solid rgba(0, 0, 0, 0.12); }\n";u.directive("vivaUiCard",function(){return o(v),{restrict:"E"}});var p="<div ng-class=\"{'{{$uiCheckbox.classPrefix + '__container'}}': true, '{{$uiCheckbox.classPrefix + '__container--has-minus'}}': $uiCheckbox.hasMinusIcon}\">\n  <viva-ui-icon icon=\"check\" ng-class=\"[$uiCheckbox.classPrefix + '__check']\" ng-hide=\"$uiCheckbox.hasMinusIcon\"></viva-ui-icon>\n  <i ng-class=\"[$uiCheckbox.classPrefix + '__minus']\" ng-show=\"$uiCheckbox.hasMinusIcon\"></i>\n</div>",h='input[type="checkbox"][viva-ui-checkbox] {\n  display: none; }\n  input[type="checkbox"][viva-ui-checkbox] + .viva-ui-checkbox__container {\n    -o-transition: all 250ms ease-in-out;\n    -moz-transition: all 250ms ease-in-out;\n    -webkit-transition: all 250ms ease-in-out;\n    transition: all 250ms ease-in-out;\n    background-color: #ffffff;\n    box-sizing: border-box;\n    display: inline-block;\n    color: #ffffff;\n    border: 1px solid rgba(0, 0, 0, 0.38);\n    border-radius: 2px;\n    width: 16px;\n    height: 16px;\n    position: relative; }\n    input[type="checkbox"][viva-ui-checkbox] + .viva-ui-checkbox__container .viva-ui-checkbox__check {\n      -ms-user-select: none;\n      -moz-user-select: none;\n      -webkit-user-select: none;\n      user-select: none;\n      box-sizing: border-box;\n      line-height: 0;\n      opacity: 0;\n      padding: 0px 1px;\n      width: 100%;\n      height: 100%; }\n    input[type="checkbox"][viva-ui-checkbox] + .viva-ui-checkbox__container .viva-ui-checkbox__minus {\n      opacity: 0;\n      background-color: rgba(0, 0, 0, 0.38);\n      display: inline-block;\n      position: absolute;\n      height: 2px;\n      top: calc(50% - 1px);\n      left: 2px;\n      right: 2px; }\n  input[type="checkbox"][viva-ui-checkbox]:checked + .viva-ui-checkbox__container {\n    background-color: #00acff;\n    border-color: #00acff; }\n    input[type="checkbox"][viva-ui-checkbox]:checked + .viva-ui-checkbox__container.viva-ui-checkbox__container--has-minus {\n      background-color: #ffffff;\n      border-color: rgba(0, 0, 0, 0.38); }\n    input[type="checkbox"][viva-ui-checkbox]:checked + .viva-ui-checkbox__container .viva-ui-checkbox__check, input[type="checkbox"][viva-ui-checkbox]:checked + .viva-ui-checkbox__container .viva-ui-checkbox__minus {\n      opacity: 1; }\n  input[type="checkbox"][viva-ui-checkbox] + .viva-ui-checkbox__container:hover,\n  input[type="checkbox"][viva-ui-checkbox]:checked + .viva-ui-checkbox__container.viva-ui-checkbox__container--has-minus:hover {\n    border-color: #00acff; }\n  input[type="checkbox"][viva-ui-checkbox]:disabled + .viva-ui-checkbox__container, input[type="checkbox"][viva-ui-checkbox]:disabled:checked + .viva-ui-checkbox__container {\n    color: rgba(0, 0, 0, 0.38);\n    background-color: #eeeeee;\n    border-color: rgba(0, 0, 0, 0.12); }\n',d='<svg width="8px" height="12px" viewBox="0 0 8 12" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">\n  <g stroke="none" stroke-width="1" fill="currentcolor" fill-rule="evenodd">\n    <g transform="translate(-75.000000, -228.000000)">\n      <g transform="translate(64.000000, 216.000000)">\n        <g transform="translate(4.000000, 6.000000)">\n          <polyline transform="translate(11.333333, 12.000000) scale(1, -1) rotate(-90.000000) translate(-11.333333, -12.000000) " points="6.73333333 15.6666667 11.3333333 11.108 15.9333333 15.6666667 17.3333333 14.2793333 11.3333333 8.33333333 5.33333333 14.2793333 6.73333333 15.6666667"></polyline>\n        </g>\n      </g>\n    </g>\n  </g>\n</svg>',b='<svg width="12px" height="10px" viewBox="0 0 12 10" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">\n  <g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">\n    <g transform="translate(-367.000000, -295.000000)" fill="currentcolor">\n      <g transform="translate(365.000000, 292.000000)">\n        <g transform="translate(0.000000, 0.000000)">\n          <polygon id="Rectangle-34-Copy" points="6 13 2 8.83333333 3.6 7.16666667 6 9.66666667 12.4 3 14 4.66666667"></polygon>\n        </g>\n      </g>\n    </g>\n  </g>\n</svg>',x=Object.freeze({arrow:d,check:b}),f="viva-ui-icon {\n  display: inline-block; }\n  viva-ui-icon > svg {\n    width: 100%;\n    height: 100%; }\n";u.directive("vivaUiIcon",function(){return o(f),{restrict:"E",link:function(n,i,e){e.$observe("icon",function(n){var e=x[n];return e?void i.html(e):void i.empty()})}}});var g=function(n,i){if(!(n instanceof i))throw new TypeError("Cannot call a class as a function")},k=function(){function n(n,i){for(var e=0;e<i.length;e++){var t=i[e];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(n,t.key,t)}}return function(i,e,t){return e&&n(i.prototype,e),t&&n(i,t),i}}(),m=function(){function n(i,e,t,o,a){g(this,n),this.$scope=i,this.$element=e,this.$attrs=t,this.$ngModel=o,this.$uiCheckbox=a}return k(n,[{key:"onClick",value:function(){var n=this.$element[0],i=n.disabled;if(!i){var e=n.checked,t=!this.$attrs.hasOwnProperty("ngTrueValue")||this.$scope.$eval(this.$attrs.ngTrueValue),o=!!this.$attrs.hasOwnProperty("ngFalseValue")&&this.$scope.$eval(this.$attrs.ngFalseValue),a=e?o:t;this.$ngModel.$setViewValue(a),this.$ngModel.$render()}}}]),n}();u.directive("vivaUiCheckbox",["$compile",function(n){return o(h),{restrict:"A",require:"ngModel",link:function(i,e,t,o){var a=i.$new(!0),r=a.$uiCheckbox={};r.classPrefix="viva-ui-checkbox";var c=n(p)(a),s=new m(i,e,t,o,r);e.after(c),t.$observe("vivaUiCheckbox",function(n){r.hasMinusIcon="minus"===n}),c.bind("click",function(){s.onClick();var n=t.ngClick;if(n){var i=new window.MouseEvent("click",{bubbles:!0,cancelable:!0});e[0].dispatchEvent(i)}})}}}]);var w="[viva-ui-flat-button] {\n  border: none;\n  background-color: transparent;\n  border-radius: 2px;\n  color: #00acff;\n  font-size: 16px;\n  font-family: 'Open Sans', sans-serif;\n  font-weight: 600;\n  padding: 0 16px;\n  text-align: center;\n  min-height: 48px;\n  min-width: 16px;\n  outline: none;\n  font-family: 'Open Sans', sans-serif;\n  -o-transition: all 150ms ease-in-out;\n  -moz-transition: all 150ms ease-in-out;\n  -webkit-transition: all 150ms ease-in-out;\n  transition: all 150ms ease-in-out; }\n  [viva-ui-flat-button]:hover {\n    cursor: pointer; }\n  [viva-ui-flat-button]:active {\n    background-color: rgba(0, 172, 255, 0.1); }\n  [viva-ui-flat-button]:disabled {\n    color: rgba(0, 0, 0, 0.38); }\n\n[viva-ui-flat-button=\"small\"] {\n  font-size: 13px;\n  min-height: 36px;\n  text-transform: uppercase; }\n\n[viva-ui-flat-button=\"large\"] {\n  min-height: 56px; }\n";u.directive("vivaUiFlatButton",function(){return o(w),{restrict:"A"}});var y='input[type="text"][viva-ui-input] {\n  border: 1px solid rgba(0, 0, 0, 0.12);\n  border-radius: 2px;\n  box-sizing: border-box;\n  color: rgba(0, 0, 0, 0.87);\n  font-size: 16px;\n  line-height: 44px;\n  margin: 0;\n  outline: none;\n  min-height: 44px;\n  font-family: \'Open Sans\', sans-serif;\n  padding-left: 16px;\n  padding-right: 16px;\n  -o-transition: border-color 250ms ease-in;\n  -moz-transition: border-color 250ms ease-in;\n  -webkit-transition: border-color 250ms ease-in;\n  transition: border-color 250ms ease-in; }\n  input[type="text"][viva-ui-input]:-ms-input-placeholder {\n    color: rgba(0, 0, 0, 0.38); }\n  input[type="text"][viva-ui-input]::-moz-placeholder {\n    color: rgba(0, 0, 0, 0.38); }\n  input[type="text"][viva-ui-input]::-webkit-input-placeholder {\n    color: rgba(0, 0, 0, 0.38); }\n  input[type="text"][viva-ui-input]:focus {\n    border-width: 2px;\n    border-color: #00acff;\n    padding-left: 15px;\n    padding-right: 15px; }\n\ninput[type="text"][viva-ui-input="error"], input[type="text"][viva-ui-input="error"]:focus {\n  border-width: 1px;\n  border-color: #e64a45;\n  padding-left: 16px;\n  padding-right: 16px; }\n\ninput[type="text"][viva-ui-input="error"] + [viva-ui-input-status] {\n  color: #e64a45;\n  font-size: 12px;\n  line-height: 18px; }\n';u.directive("vivaUiInput",function(){return o(y),{restrict:"A"}});var _="viva-ui-status-tag {\n  display: inline-block;\n  border: 1px solid;\n  border-radius: 2px;\n  font-size: 13px;\n  padding: 0 8px;\n  line-height: 24px;\n  font-family: 'Open Sans', sans-serif;\n  -o-transition: all 250ms ease-in-out;\n  -moz-transition: all 250ms ease-in-out;\n  -webkit-transition: all 250ms ease-in-out;\n  transition: all 250ms ease-in-out;\n  border-color: rgba(0, 0, 0, 0.12);\n  color: rgba(0, 0, 0, 0.5); }\n  viva-ui-status-tag[status=\"success\"] {\n    border-color: #39d91e;\n    color: #39d91e; }\n";return u.directive("vivaUiStatusTag",function(){return o(_),{restrict:"E"}}),u}(angular);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,